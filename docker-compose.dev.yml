services:
  easyappointments-dev-db:
    container_name: easyappointments-dev-db
    image: 'mysql:8.0'
    volumes:
      - '${MYSQL_DATA_DIR:-./docker/mysql-dev}:/var/lib/mysql'
      - './docker/mysql-config/production.cnf:/etc/mysql/conf.d/custom.cnf:ro'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-easyappointments}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - '${MYSQL_PORT:-3306}:3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u${MYSQL_USER:-user}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - easyappointments-dev-net

  easyappointments-dev-php:
    container_name: easyappointments-dev-php
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
      target: development
    working_dir: /var/www/html
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - '.:/var/www/html'
      - './docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini:ro'
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - WA_TOKEN_ENC_KEY=${WA_TOKEN_ENC_KEY:-}
      - DB_HOST=easyappointments-dev-db
      - DB_PORT=${MYSQL_PORT:-3306}
      - DB_DATABASE=${MYSQL_DATABASE:-easyappointments}
      - DB_USERNAME=${MYSQL_USER:-user}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      easyappointments-dev-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      easyappointments-dev-net:
        aliases:
          - php-fpm

  easyappointments-dev-nginx:
    container_name: easyappointments-dev-nginx
    image: 'nginx:1.25-alpine'
    working_dir: /var/www/html
    volumes:
      - '.:/var/www/html:ro'
      - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '${HTTP_PORT:-80}:80'
    depends_on:
      - easyappointments-dev-php
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/index.php/installation"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - easyappointments-dev-net

  easyappointments-dev-mailpit:
    container_name: easyappointments-dev-mailpit
    image: 'axllent/mailpit:v1.10'
    ports:
      - '${MAILPIT_WEB_PORT:-8025}:8025'
      - '${MAILPIT_SMTP_PORT:-1025}:1025'
    environment:
      - MP_MAX_MESSAGES=5000
      - MP_DATABASE=/data/mailpit.db
      - MP_SMTP_AUTH_ACCEPT_ANY=1
      - MP_SMTP_AUTH_ALLOW_INSECURE=1
    volumes:
      - easyappointments-dev-mailpit-data:/data
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025/api/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - easyappointments-dev-net

  easyappointments-dev-whatsapp-worker:
    container_name: easyappointments-dev-whatsapp-worker
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
      target: development
    working_dir: /var/www/html
    volumes:
      - '.:/var/www/html'
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - WA_TOKEN_ENC_KEY=${WA_TOKEN_ENC_KEY:-}
      - DB_HOST=easyappointments-dev-db
      - DB_PORT=${MYSQL_PORT:-3306}
      - DB_DATABASE=${MYSQL_DATABASE:-easyappointments}
      - DB_USERNAME=${MYSQL_USER:-user}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - WPPCONNECT_TIMEOUT=${WPPCONNECT_TIMEOUT:-30}
      - WPPCONNECT_CONNECT_TIMEOUT=${WPPCONNECT_CONNECT_TIMEOUT:-10}
    restart: unless-stopped
    depends_on:
      easyappointments-dev-db:
        condition: service_healthy
      easyappointments-dev-php:
        condition: service_started
    command: ["php", "scripts/whatsapp_worker.php"]
    networks:
      - easyappointments-dev-net

  easyappointments-dev-logrotate:
    container_name: easyappointments-dev-logrotate
    image: alpine:3.18
    working_dir: /var/www/html
    volumes:
      - '.:/var/www/html'
      - './docker/logrotate:/var/www/html/docker/logrotate:ro'
    restart: unless-stopped
    depends_on:
      - easyappointments-dev-whatsapp-worker
    command: ["/bin/sh", "-lc", "apk add --no-cache logrotate >/dev/null 2>&1 || true; while true; do logrotate -s /var/tmp/logrotate.status /var/www/html/docker/logrotate/whatsapp_worker.conf 2>&1 | sed -e 's/^/[logrotate] /'; sleep 86400; done"]
    networks:
      - easyappointments-dev-net

volumes:
  easyappointments-dev-mysql-data:
    driver: local
  easyappointments-dev-mailpit-data:
    driver: local

networks:
  easyappointments-dev-net:
    driver: bridge
    name: easyappointments-dev-net

